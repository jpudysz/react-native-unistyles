///
/// HybridUnistylesRuntimeSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridUnistylesRuntimeSpec.hpp"

namespace margelo::nitro::unistyles {

  void HybridUnistylesRuntimeSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("colorScheme", &HybridUnistylesRuntimeSpec::getColorScheme);
      prototype.registerHybridGetter("hasAdaptiveThemes", &HybridUnistylesRuntimeSpec::getHasAdaptiveThemes);
      prototype.registerHybridGetter("screen", &HybridUnistylesRuntimeSpec::getScreen);
      prototype.registerHybridGetter("themeName", &HybridUnistylesRuntimeSpec::getThemeName);
      prototype.registerHybridGetter("contentSizeCategory", &HybridUnistylesRuntimeSpec::getContentSizeCategory);
      prototype.registerHybridGetter("breakpoint", &HybridUnistylesRuntimeSpec::getBreakpoint);
      prototype.registerHybridGetter("breakpoints", &HybridUnistylesRuntimeSpec::getBreakpoints);
      prototype.registerHybridGetter("insets", &HybridUnistylesRuntimeSpec::getInsets);
      prototype.registerHybridGetter("orientation", &HybridUnistylesRuntimeSpec::getOrientation);
      prototype.registerHybridGetter("pixelRatio", &HybridUnistylesRuntimeSpec::getPixelRatio);
      prototype.registerHybridGetter("fontScale", &HybridUnistylesRuntimeSpec::getFontScale);
      prototype.registerHybridGetter("rtl", &HybridUnistylesRuntimeSpec::getRtl);
      prototype.registerHybridGetter("isLandscape", &HybridUnistylesRuntimeSpec::getIsLandscape);
      prototype.registerHybridGetter("isPortrait", &HybridUnistylesRuntimeSpec::getIsPortrait);
      prototype.registerHybridGetter("miniRuntime", &HybridUnistylesRuntimeSpec::getMiniRuntime);
      prototype.registerHybridMethod("setTheme", &HybridUnistylesRuntimeSpec::setTheme);
      prototype.registerHybridMethod("setAdaptiveThemes", &HybridUnistylesRuntimeSpec::setAdaptiveThemes);
      prototype.registerHybridMethod("setImmersiveModeNative", &HybridUnistylesRuntimeSpec::setImmersiveModeNative);
      prototype.registerHybridMethod("nativeSetRootViewBackgroundColor", &HybridUnistylesRuntimeSpec::nativeSetRootViewBackgroundColor);
    });
  }

} // namespace margelo::nitro::unistyles
